version: '2'
services:
    uwsgi:
        build: .
        command: uwsgi --ini /home/spz/code/uwsgi.ini --workers 8 --threads 4
        ports:
            - "127.0.0.1:3031:3031"
        volumes:
            - ./docs/python:/home/spz/code/doc.build:rw
            - ./src/spz/spz:/home/spz/code/spz:ro
            - ./src/spz/util:/home/spz/code/util:ro
            - data_static:/home/spz/code/spz/static
            - state_spz:/state
        tmpfs:
            - /tmp
        read_only: true
        environment:
            - MAIL_PORT=tcp://mail:25
            - POSTGRES_PORT=tcp://postgres:5432
            - REDIS_PORT=tcp://redis:6379
            - SPZ_CFG_FILE=/home/spz/code/instance/development.cfg
        links:
            - mail
            - postgres
            - redis
        networks:
            - front
            - back
        restart: unless-stopped
    celery_beat:
        build: .
        command: celery --app=spz.tasks.cel beat --schedule=/state/celerybeat-schedule --pidfile=/tmp/celerybeat.pid --loglevel=INFO
        volumes_from:
            - uwsgi
        tmpfs:
            - /tmp
        read_only: true
        environment:
            - MAIL_PORT=tcp://mail:25
            - POSTGRES_PORT=tcp://postgres:5432
            - REDIS_PORT=tcp://redis:6379
            - SPZ_CFG_FILE=/home/spz/code/instance/development.cfg
        links:
            - mail
            - postgres
            - redis
        networks:
            - back
        restart: unless-stopped
    celery_default:
        build: .
        command: celery --app=spz.tasks.cel worker --queues=default --loglevel=INFO --autoreload --concurrency 1
        volumes_from:
            - uwsgi
        tmpfs:
            - /tmp
        read_only: true
        environment:
            - MAIL_PORT=tcp://mail:25
            - POSTGRES_PORT=tcp://postgres:5432
            - REDIS_PORT=tcp://redis:6379
            - SPZ_CFG_FILE=/home/spz/code/instance/development.cfg
        links:
            - mail
            - postgres
            - redis
        networks:
            - back
        restart: unless-stopped
    celery_slow_mails:
        build: .
        command: celery --app=spz.tasks.cel worker --queue=slow_mails --loglevel=INFO --autoreload --concurrency 1
        volumes_from:
            - uwsgi
        tmpfs:
            - /tmp
        read_only: true
        environment:
            - MAIL_PORT=tcp://mail:25
            - POSTGRES_PORT=tcp://postgres:5432
            - REDIS_PORT=tcp://redis:6379
            - SPZ_CFG_FILE=/home/spz/code/instance/development.cfg
        links:
            - mail
            - postgres
            - redis
        networks:
            - back
        restart: unless-stopped
    redis:
        image: redis:3.0
        command: redis-server --appendonly yes
        ports:
            - "127.0.0.1:26379:6379"
        volumes:
            - data_redis:/data
        read_only: true
        networks:
            - back
        restart: unless-stopped
    postgres:
        image: postgres:9.4
        ports:
            - "127.0.0.1:25432:5432"
        volumes:
            - ./conf/postgresql.conf:/var/lib/postgresql/postgresql.conf:ro
            - data_postgres:/var/lib/postgresql/data
        tmpfs:
            - /run/postgresql
            - /tmp
        read_only: true
        environment:
            - POSTGRES_PASSWORD=mysecretpassword
        networks:
            - back
        restart: unless-stopped
    mail:
        image: djfarrelly/maildev:1.0.0-rc2
        ports:
            - "127.0.0.1:8080:80"
        volumes:
            - state_mail:/var/spool
        tmpfs:
            - /run
            - /tmp
        networks:
            - back
        restart: unless-stopped
# Uncomment for production
#    mail:
#        image: spzsignup/opensmtpd:6.0.3p1
#        volumes:
#            - ./conf/smtpd.conf:/etc/smtpd.conf
#            - state_mail:/var/spool
#        tmpfs:
#            - /run
#            - /tmp
#        read_only: true
#        networks:
#            - back
#        restart: unless-stopped
    nginx:
        image: nginx:1.11
        command: nginx -g "worker_processes 16;"
        ports:
            - "127.0.0.1:80:80"
            - "127.0.0.1:443:443"
        volumes:
            - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./conf/nginx/ssl:/etc/nginx/ssl:ro
            - cache_nginx:/var/cache/nginx
            - data_static:/static:ro
        tmpfs:
            - /tmp
        read_only: true
        networks:
            - front
        links:
            - uwsgi
        restart: unless-stopped
# Uncomment for production
#    pg-dump:
#        image: jmcarbo/docker-postgres-backup
#        container_name: pg-dump
#        restart: unless-stopped
#        environment:
#            CRON_TIME: 0 * * * *
#            POSTGRES_HOST: postgres
#            POSTGRES_PORT: 5432
#            POSTGRES_USER: postgres
#            POSTGRES_PASSWORD: mysecretpassword
#            POSTGRES_DB: spz
#            MAX_BACKUPS: 200
#            INIT_BACKUP: 'true'
#        volumes:
#            - backup:/backup
#        networks:
#            - back
#        links:
#            - postgres
#    backup:
#        image: southclaws/restic-robot
#        container_name: backup
#        restart: unless-stopped
#        environment:
#            # once every hour (10 minutes past)
#            SCHEDULE: 0 10 * * * *
#            RESTIC_REPOSITORY: 'b2:spz-backup'
#            RESTIC_ARGS: /data
#            RUN_ON_BOOT: 'true'
#            B2_ACCOUNT_ID: ${B2_ACCOUNT_ID}
#            B2_ACCOUNT_KEY: ${B2_ACCOUNT_KEY}
#            RESTIC_PASSWORD: ${RESTIC_PASSWORD}
#        volumes:
#            - backup:/data/

volumes:
    backup: {}
    cache_nginx: {}
    data_postgres: {}
    data_redis: {}
    data_static: {}
    state_mail: {}
    state_spz: {}
networks:
    front: {}
    back: {}
